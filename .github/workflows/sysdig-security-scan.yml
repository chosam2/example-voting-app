name: Sysdig Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io

jobs:
  # Infrastructure as Code (IaC) 보안 스캔
  # Kubernetes 매니페스트 파일들의 보안 설정을 검증
  iac-scan:
    name: IaC Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Sysdig IaC Security Scan
        id: iac-scan
        uses: sysdiglabs/scan-action@v6
        with:
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          cli-scanner-version: 1.22.5
          mode: iac
          iac-scan-path: ./k8s-specifications
          recursive: true
          minimum-severity: medium
          stop-on-failed-policy-eval: false
          stop-on-processing-error: false

      - name: Collect IaC Scan Results
        run: |
          echo "=== IaC Scan Results Summary ==="
          echo "📁 Scanned Path: ./k8s-specifications"
          echo "🔍 Scan Mode: Infrastructure as Code (IaC)"
          echo "⚠️  Minimum Severity: Medium"
          echo ""
          echo "=== Generated Files ==="
          ls -la
          echo ""
          echo "=== Looking for result files ==="
          find . -name "*.json" -o -name "*.log" -o -name "*.txt" 2>/dev/null || echo "No additional result files found"
          echo ""
          echo "ℹ️  Note: IaC scans focus on configuration compliance rather than vulnerabilities"
          echo "📊 Results are primarily available in Sysdig Secure console"

      - name: Archive IaC Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: iac-scan-results
          path: |
            scan-result.json
            *.json
            *.log
            *.txt
          if-no-files-found: warn

      - name: IaC Scan Summary
        if: always()
        run: |
          echo "## 🏗️ IaC Security Scan Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scan Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- 📂 **Path**: \`./k8s-specifications\`" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 **Mode**: Infrastructure as Code (IaC)" >> $GITHUB_STEP_SUMMARY
          echo "- ⚠️ **Severity Filter**: Medium and above" >> $GITHUB_STEP_SUMMARY
          echo "- 🔄 **Recursive**: Yes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Results Location:**" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 **Sysdig Secure Console**: Detailed policy compliance results" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **GitHub Artifacts**: Raw scan data (if available)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ℹ️ **Note**: IaC scans validate Kubernetes security configurations and compliance policies. Unlike container image scans, they don't generate SARIF reports for GitHub Security tab." >> $GITHUB_STEP_SUMMARY

  # Vote 서비스 컨테이너 이미지 보안 스캔
  # Python Flask 애플리케이션의 취약점 검사
  vote-security-scan:
    name: Vote Service Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Vote Service Image
        run: |
          docker build -t vote-local:${{ github.sha }} ./vote --target final
          docker images vote-local:${{ github.sha }}

      - name: Sysdig Container Image Scan
        id: scan
        uses: sysdiglabs/scan-action@v6
        with:
          image-tag: vote-local:${{ github.sha }}
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          mode: vm
          severity-at-least: medium
          stop-on-failed-policy-eval: false
          stop-on-processing-error: false

      - name: Upload SARIF Report to GitHub Security
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/sarif.json

      - name: Archive Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vote-scan-results
          path: |
            sarif.json
            scan-result.json
          if-no-files-found: warn

  # Worker 서비스 컨테이너 이미지 보안 스캔
  # .NET Core 애플리케이션의 취약점 검사
  worker-security-scan:
    name: Worker Service Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Worker Service Image
        run: |
          docker build -t worker-local:${{ github.sha }} ./worker
          docker images worker-local:${{ github.sha }}

      - name: Sysdig Container Image Scan
        id: scan
        uses: sysdiglabs/scan-action@v6
        with:
          image-tag: worker-local:${{ github.sha }}
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          mode: vm
          severity-at-least: medium
          stop-on-failed-policy-eval: false
          stop-on-processing-error: false

      - name: Upload SARIF Report to GitHub Security
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/sarif.json

      - name: Archive Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: worker-scan-results
          path: |
            sarif.json
            scan-result.json
          if-no-files-found: warn

  # Result 서비스 컨테이너 이미지 보안 스캔
  # Node.js 애플리케이션의 취약점 검사 (높은 위험도 예상)
  result-security-scan:
    name: Result Service Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Result Service Image
        run: |
          docker build -t result-local:${{ github.sha }} ./result
          docker images result-local:${{ github.sha }}

      - name: Sysdig Container Image Scan
        id: scan
        uses: sysdiglabs/scan-action@v6
        with:
          image-tag: result-local:${{ github.sha }}
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          mode: vm
          severity-at-least: medium
          stop-on-failed-policy-eval: false
          stop-on-processing-error: false

      - name: Upload SARIF Report to GitHub Security
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/sarif.json

      - name: Archive Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: result-scan-results
          path: |
            sarif.json
            scan-result.json
          if-no-files-found: warn
